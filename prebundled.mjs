class t{static T=t=>new Promise((s=>setTimeout(s,t)));static IA=t=>"AsyncFunction"===t.constructor.name}class s{D;constructor(t,s=!1){this.D=[t,s]}}class e{Q=[];IR=!1;A=t=>{this.P(t),this.IR||this.R()};P=t=>{this.Q.push(t.D)};R=async()=>{for(this.IR=!0;0!==this.Q.length;)for(let s=0;s<this.Q.length;s++){const[e,a]=this.Q[s];if(this.Q.shift(),a&&await t.T(a),t.IA(e)){await e();break}e();break}this.IR=!1}}const a=new class{S=null;QH;D;constructor(t=!1){this.D=t,this.QH=new e}};class c{S=[];V_;constructor(t,s=void 0,e=document){this.V_=t,s&&new i((async()=>{((t,s,e)=>{const a=e.querySelectorAll(`[${s}]`);a&&a.forEach((e=>{t=JSON.stringify(t).replace(/^"(.*)"$/,"$1");const a=(e.getAttribute(s)??"").split(";");for(let s=0;s<a.length;s++){const c=a[s];try{if(!(c in e))throw"";e[c]=t}catch(s){e.setAttribute(c,t)}}}))})(this.value,s,e)}))}get value(){return a.S&&this.S.push(a.S),this.V_}set value(t){this.V_!==t&&(this.V_=t,this.S&&a.QH.A(new s((async()=>{await Promise.all(this.S.map((async t=>{try{return await t()}catch(t){throw console.error("Error in callback:",t),t}}))).catch((t=>{console.error("Promise.all failed:",t)}))}),a.D)))}}class i{constructor(t){a.QH.A(new s((async()=>{a.S=t,await t(),a.S=null}),a.D))}}class r extends c{constructor(t,s=void 0,e=document){super("",s,e),new i((async()=>{super.value=await t()}))}get value(){return super.value}set value(t){console.log("you are not allowed to change derived value manually")}}new class t{static signal="Let";static effect="$";static derived="Derived";constructor(){window[t.signal]=c,window[t.effect]=i,window[t.derived]=r}};
