const t=async(t,...e)=>{await Promise.all(t.map((async t=>{try{return await t(...e)}catch(t){throw console.error("Error in callback:",t),t}}))).catch((t=>{console.error("Promise.all failed:",t)}))};class e{static T=t=>new Promise((e=>setTimeout(e,t)));static IA=t=>"AsyncFunction"===t.constructor.name}class s{D;constructor(t,e=!1){this.D=[t,e]}}class i{Q=[];IR=!1;A=t=>{this.P(t),this.IR||this.R()};P=t=>{this.Q.push(t.D)};R=async()=>{for(this.IR=!0;0!==this.Q.length;)for(let t=0;t<this.Q.length;t++){const[s,i]=this.Q[t];if(this.Q.shift(),i&&await e.T(i),e.IA(s)){await s();break}s();break}this.IR=!1}}const n=new class{S=null;QH=new i;D=!1;P="hf_ss-binded_viewport";PX="hf_ss-binded_viewport_on_exit";V="hf_ss-binded_value";LC="hf_ss-binded_lifecycle"};class r{removeAll$=()=>{this.S=[]};remove$=t=>{this.S=this.S.filter((e=>t.E!==e))};S=[];V_;constructor(t,e=void 0,s=void 0){this.V_=t,e&&new o((async()=>{((t,e,s,i)=>{const r=Array.from(s.querySelectorAll(`[${e}]`));if(s instanceof ShadowRoot||s instanceof Document||!s.hasAttribute(e)||r.push(s),r)for(let s=0;s<r.length;s++){const o=r[s],a=(o.getAttribute(e)??"").split(";");for(let s=0;s<a.length;s++){const r=a[s];try{if(!(r in o))throw"";if(o[r]=t,"value"===r&&"value"in o&&o.parentNode&&!o.hasAttribute(n.V)){o.setAttribute(n.V,"");const t=()=>{i.value=o.value};o.addEventListener("input",t),new MutationObserver(((e,s)=>{for(let i of e)if("childList"===i.type)for(let e=0;e<i.removedNodes.length;e++)if(i.removedNodes[e]===o)return o.removeEventListener("input",t),void s.disconnect()})).observe(o.parentNode,{childList:!0})}}catch(s){if(t=JSON.stringify(t).replace(/^"(.*)"$/,"$1"),""==r)return void console.warn({element:o,attributeName:e,message:"doesn't have target"});o.setAttribute(r,t)}}}})(this.value,e,s??document,this)}))}get value(){return n.S&&!this.S.some((t=>t===n.S))&&this.S.push(n.S),this.V_}set value(e){this.V_!==e&&(this.V_=e,this.S&&n.QH.A(new s((async()=>{await t(this.S,!1)}),n.D)))}}class o{E;first=!0;constructor(t){this.E=t,n.QH.A(new s((async()=>{n.S=t,await t(this.first),this.first=!1,n.S=null}),n.D))}}class a{static __;constructor(){a.__ instanceof a||(a.__=this,this.documentMutation_=new r(""),this.documentObserver=new MutationObserver((t=>{t.forEach((t=>{this.documentMutation_.value=t}))})),this.documentObserver.observe(document,{childList:!0,subtree:!0}))}}window.Lifecycle=class{$;AL;DS;O;ML;constructor(t,e=document){this.AL=t,this.DS=e,e===document?(a.__ instanceof a||new a,this.O=a.__.documentObserver,this.ML=a.__.documentMutation_):(this.ML=new r(""),this.O=new MutationObserver((t=>{this.ML.value=t})),this.O.observe(e,{childList:!0,subtree:!0})),this.$=new o((async()=>{this.ML.value,await this.CE()}))}DC={};CE=async()=>{for(const t in this.AL){const e=this.AL[t],s=this.DS.querySelectorAll(`[${t}]`);for(let i=0;i<s.length;i++){const r=s[i];if(!r.hasAttribute(n.LC)){r.setAttribute(n.LC,"");const s=`${t}="${r.getAttribute(t)??""}"`;this.DC[s]=await e(r,this.unObserve)}}}for(const t in this.DC){const e=this.DC[t];this.DS.querySelector(`[${t}]`)||(await e(),delete this.DC[t],0===Object.keys(this.DC).length&&this.ML.remove$(this.$))}};unObserve=()=>{n.QH.A(new s((async()=>{if(this.DC){let e=[];for(const t in this.DC)e.push(this.DC[t]);await t(e),this.DC={}}this.ML.remove$(this.$),this.DS!==document&&this.O.disconnect()}),n.D))}},window.Let=r,window.Derived=class extends r{constructor(t,e=void 0,s=void 0){super("",e,s),new o((async()=>{super.value=await t()}))}get value(){return super.value}set value(t){console.warn("you are not allowed to change Derived value manually")}},window.Ping=class{AC;constructor(t){this.AC=t,this.ping(!0)}ping=(t=!1)=>{n.QH.A(new s((async()=>{await this.AC(t)}),n.D))}},window.$=o,window.OnViewPort=class{constructor(t,e,i=(async(t,e)=>{e()}),r=document){const o=r.querySelectorAll(`[${t}]`);if(!o)return;const a=new IntersectionObserver(((t,r)=>{n.QH.A(new s((async()=>{for(let s=0;s<t.length;s++){const o=t[s].target;t[s].isIntersecting?(o.setAttribute(n.PX,""),await e(o)):o.hasAttribute(n.PX)&&await i(o,(()=>r.disconnect()))}}),n.D))}),{threshold:[0,0]});for(let t=0;t<o.length;t++){const e=o[t];if(e.hasAttribute(n.P))return;e.setAttribute(n.P,""),a.observe(e)}}};
